name: Deploy to EC2

on:
  push:
    branches:
      - development

jobs:
  deploy:
    runs-on: ubuntu-latest

    environment: development

    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Set up Go
        uses: actions/setup-go@v2
        with:
          go-version: 1.20.6

      - name: Build
        run: |
          go build -o login-mobile-app-be

      - name: Archive
        uses: actions/upload-artifact@v2
        with:
          name: login-mobile-app-be
          path: login-mobile-app-be

      - name: Transfer to EC2
        uses: appleboy/scp-action@master
        with:
          debug: true
          host: ${{ secrets.EC2_HOST }}
          username: ${{ secrets.EC2_USERNAME }}
          key: ${{ secrets.EC2_PRIVATE_KEY }}
          source: login-mobile-app-be
          target: /opt/login-mobile-app-be/

      - name: Create .env file
        uses: appleboy/ssh-action@master
        with:
          host: ${{ secrets.EC2_HOST }}
          username: ${{ secrets.EC2_USERNAME }}
          key: ${{ secrets.EC2_PRIVATE_KEY }}
          script: |
            echo "BASE_URL=${{ secrets.BASE_URL }}" >> .env
            echo "PORT=${{ secrets.PORT }}" >> .env
            echo "MONGO_CONNECTION_STRING=${{ secrets.MONGO_CONNECTION_STRING }}" >> .env
            echo "DATABASE_NAME=${{ secrets.DATABASE_NAME }}" >> .env
            echo "MAILJET_API_KEY=${{ secrets.MAILJET_API_KEY }}" >> .env
            echo "MAILJET_SECRET_KEY=${{ secrets.MAILJET_SECRET_KEY }}" >> .env
            echo "MAILJET_SENDER_EMAIL=${{ secrets.MAILJET_SENDER_EMAIL }}" >> .env
            echo "MAILJET_SENDER_NAME=${{ secrets.MAILJET_SENDER_NAME }}" >> .env
            echo "ACCOUNT_VERIFICATION_KEY=${{ secrets.ACCOUNT_VERIFICATION_KEY }}" >> .env
            echo "GOOGLE_PROJECT_ID=${{ secrets.GOOGLE_PROJECT_ID }}" >> .env
            echo "GOOGLE_CLIENT_ID=${{ secrets.GOOGLE_CLIENT_ID }}" >> .env
            echo "GOOGLE_CLIENT_SECRET=${{ secrets.GOOGLE_CLIENT_SECRET }}" >> .env
            echo "OAUTH_STATE_STRING=${{ secrets.OAUTH_STATE_STRING }}" >> .env
            sudo mv .env /opt/login-mobile-app-be/

      - name: Deploy to EC2
        uses: appleboy/ssh-action@master
        with:
          host: ${{ secrets.EC2_HOST }}
          username: ${{ secrets.EC2_USERNAME }}
          key: ${{ secrets.EC2_PRIVATE_KEY }}
          script: |
            cd /opt/login-mobile-app-be/
            source .env

            # Stop the process running on port 8080
            PORT=${{ secrets.PORT }}
            PROCESS_ID=$(sudo lsof -t -i:${PORT})
            if [ -n "${PROCESS_ID}" ]; then
              echo "Stopping process running on port ${PORT}"
              sudo kill ${PROCESS_ID}
            fi

            # Run the binary in the background
            nohup ./login-mobile-app-be > /dev/null 2>&1 &
